plugins {
    id('com.github.johnrengelman.shadow') version('8.1.1')
    id('net.minecraftforge.gradle') version('[6.0,6.2)')
}

minecraft {
    mappings(channel: mapping_channel, version: mapping_version)
}

dependencies {
    implementation(project(path: ':common', configuration: 'shadow'))
    minecraft("net.minecraftforge:forge:${minecraft_version}-${forge_version}")

    // TaterLib
    compileOnly("dev.neuralnexus:TaterLib:${taterlib_version}")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            loader_version_range   : loader_version_range,
            forge_version          : forge_version,
            forge_version_range    : forge_version_range,
            pack_format_number     : pack_format_number,

            project_id             : project_id,
            project_name           : project_name,
            project_description    : project_description,
            license                : license,
            version                : version,
            authors                : authors,

            homepage_url           : homepage_url,
            issue_tracker_url      : issue_tracker_url,
            update_json_url        : update_json_url,

            taterlib_version       : taterlib_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

reobf {
    shadowJar {}
}

shadowJar {
    dependencies {
        include(project(':common'))
    }

    destinationDirectory = file('../../target')
    archiveFileName = "${project_name}-forge-${minecraft_version}-${version}.jar"
}

artifacts {
    archives(shadowJar)
}
