plugins {
    id('java')
    id('com.github.johnrengelman.shadow') version('8.1.1')
}

sourceCompatibility = targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'NeuralNexus'
        url = 'https://maven.neuralnexus.dev/releases'
    }
    maven {
        name = 'NeuralNexusSnapshots'
        url = 'https://maven.neuralnexus.dev/snapshots'
    }
}

dependencies {
    implementation('dev.dejvokep:boosted-yaml:1.3.1')
    implementation('net.dv8tion:JDA:5.0.0-beta.19') {
        exclude(module: 'opus-java')
    }
    compileOnly('com.google.code.gson:gson:2.10.1')
    compileOnly('com.google.guava:guava:33.0.0-jre')
    compileOnly("dev.neuralnexus:taterlib-api:${taterlib_version}")
    compileOnly("dev.neuralnexus:entrypoint-spoof:0.1.1")
}

tasks.withType(ProcessResources).configureEach {
    filesMatching([
            'plugin.yml',
            'bungee.yml',
            'fabric.mod.json',
            'META-INF/mods.toml', 'mcmod.info', 'pack.mcmeta',
            'META-INF/sponge_plugins.json',
            'velocity-plugin.json'
    ]) {
        expand project.properties
    }
}

shadowJar {
    dependencies {
        include(dependency("${group_id}:${project_id}:${version}"))
        include(dependency('dev.dejvokep:boosted-yaml:1.3.1'))

        include(dependency('net.dv8tion:JDA:5.0.0-beta.19'))
        include(dependency('org.apache.commons:commons-collections4:4.4'))
        include(dependency('com.squareup.okhttp3:okhttp:4.12.0'))
        include(dependency('com.squareup.okio:okio-jvm:3.6.0'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib'))
        include(dependency('com.neovisionaries:nv-websocket-client:2.14'))
        include(dependency('net.sf.trove4j:trove4j:3.0.3'))
        include(dependency('com.fasterxml.jackson.core:jackson-core:2.16.0'))
        include(dependency('com.fasterxml.jackson.core:jackson-databind:2.16.0'))
        include(dependency('com.fasterxml.jackson.core:jackson-annotations:2.16.0'))
    }
    relocate('dev.dejvokep', "${group_id}.${project_id}.lib.dejvokep")
    relocate('org.intellij', "${group_id}.${project_id}.lib.intellij")
    relocate('org.jetbrains', "${group_id}.${project_id}.lib.jetbrains")

    relocate('net.dv8tion', "${group_id}.${project_id}.lib.dv8tion")
    relocate('org.apache.commons', "${group_id}.${project_id}.lib.commons")
    relocate('okhttp3', "${group_id}.${project_id}.lib.okhttp3")
    relocate('okio', "${group_id}.${project_id}.lib.okio")
    relocate('kotlin', "${group_id}.${project_id}.lib.kotlin")
    relocate('com.neovisionaries', "${group_id}.${project_id}.lib.neovisionaries")
    relocate('net.sf.trove4j', "${group_id}.${project_id}.lib.trove4j")
    relocate('com.iwebpp', "${group_id}.${project_id}.lib.iwebpp")
    relocate('com.fasterxml.jackson', "${group_id}.${project_id}.lib.jackson")

    relocate('com.google.gson', 'dev.neuralnexus.taterlib.lib.gson')
    relocate('com.google.common', 'dev.neuralnexus.taterlib.lib.guava')
    relocate('com.google.thirdparty', 'dev.neuralnexus.taterlib.lib.google.thirdparty')

    archiveClassifier = ''
}

artifacts {
    archives(shadowJar)
}
