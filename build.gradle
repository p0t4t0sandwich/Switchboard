plugins {
    id('java')
}

defaultTasks('build')

subprojects {
    apply(plugin: 'java')

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        mavenCentral()

        // Bukkit/Bungee
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }

        // Paper/Velocity
        maven {
            name = "papermc-repo"
            url = "https://repo.papermc.io/repository/maven-public/"
        }

        // NeuralNexus
        maven {
            name = "NeuralNexus"
            url = "https://maven.neuralnexus.dev/releases"
        }

        // NeuralNexus Snapshots
        maven {
            name = "NeuralNexus Snapshots"
            url = "https://maven.neuralnexus.dev/snapshots"
        }
    }
}

task taterBuild(type: Jar) {
    dependsOn(subprojects*.build)
    archiveFileName = "${project_id}-${version}.jar"
    destinationDirectory = file("./build/libs")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        fileTree("./target").findAll {
            it.name.contains('jar')
        }.collect {
            if (it.name.contains('-forge')) {
                zipTree(it).matching {
                    exclude 'META-INF/mods.toml'
                }
            } else if (it.name.contains('sponge7')) {
                zipTree(it).matching {
                    exclude('META-INF/sponge_plugins.json')
                    exclude('mcmod.info')
                }
            } else {
                zipTree(it)
            }
        }
    }
    from(["README.md", "LICENSE", "LICENSE-API"]) {
        into("META-INF")
    }
}

clean {
    delete('target')
}
